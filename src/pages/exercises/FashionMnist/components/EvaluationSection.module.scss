@use '../../../../styles/colors' as colors;
@use '../../../../styles/spacing' as spacing;
@use '../../../../styles/breakpoints' as breakpoints;
@use '../../../../styles/theme' as theme;
@use "sass:map";

.evaluation-section {
  &__canvas-container {
    display: flex;
    flex-direction: column;
    flex: none;
    gap: spacing.$spacing-md;
  }

  &__canvases {
    display: flex;
    flex-direction: column;
    gap: spacing.$spacing-md;

    @media (min-width: map.get(breakpoints.$breakpoints, 'md')) {
      flex-direction: row;
      align-items: flex-start;
    }
  }

  &__dropzone {
    &-canvas {
      border: 1px solid colors.$border-color;
      border-radius: theme.$border-radius;
      margin-bottom: spacing.$spacing-md;
      max-width: 100%;

      &--dragging {
        cursor: grabbing;
      }

      &--idle {
        cursor: grab;
      }
    }

    &-controls {
      display: grid;
      grid-template-columns: minmax(200px, 300px) minmax(200px, 300px);
      gap: spacing.$spacing-sm;
      margin-bottom: spacing.$spacing-md;

      @media (max-width: map.get(breakpoints.$breakpoints, 'sm')) {
        grid-template-columns: 1fr;
        width: 100%;
      }
    }
  }

  &__preview {
    &-canvas {
      border: 1px solid colors.$border-color;
      border-radius: theme.$border-radius;
      margin-bottom: spacing.$spacing-md;
    }

    &-container {
      min-width: 280px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }
  }

  &__button-group {
    display: flex;
    gap: spacing.$spacing-md;
    margin-bottom: spacing.$spacing-md;

    @media (max-width: map.get(breakpoints.$breakpoints, 'md')) {
      margin-bottom: spacing.$spacing-lg;
    }
  }

  &__predictions {
    text-align: center;

    &-title {
      margin-bottom: spacing.$spacing-md;
    }

    &-item {
      &:not(:last-child) {
        margin-bottom: spacing.$spacing-sm;
      }
    }
  }
}